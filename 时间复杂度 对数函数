
a^b= n,  b=log(a)n   a为底数， n为真数（幂， 因变量），b为对数
a>0 a!=1 , n>0
底真同对数正,底真异对数负

时间复杂度：  
  O(1)<O(logn)<O(n)<O(nlogn)<O(n2)<O(n3)<O(2n)//2的n方<O(n!)<O(nn)//n的n方
  O括号内的函数， 指明耗时和数据增长量的关系， n代表输入数据的量。
  
  logn : 二分查找法  当数据增加N倍的时候，耗时增加 logn倍，  当N增加256, 耗时增加8倍。
  n^2 :  冒泡排序 就代表数据量增大n倍时，耗时增大n的平方倍
  nlogn : 归并排序 当数据增大256倍时，耗时增大256*8=2048倍
  O(1) ： 最低的时空复杂度，也就是耗时与输入数据大小无关，无论输入数据增大多少倍，耗时/耗空间都不变。 哈希算法就是典型的O(1)时间复杂度，无论数据规模多大，都可以在一次计算后找到目标
